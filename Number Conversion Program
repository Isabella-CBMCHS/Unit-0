'''
#decimal -> binary using "recursion" (research tht)
class User:
    def __init__(self, name):
        self.name = name

    def DecimalToBinary(self, num):

        if num >= 1:
            DecimalToBinary(num // 2)
        print(num % 2, end = '')

    #"Driver" code -- rsrch
    if __name__ =='__main__':

            #decimal value
            dec_val = input("Enter your number:")
            # ^^^ make this an input and it should work!! then add user input 
            # (name) and print dio w name asking 4 input***

            #calling function
            DecimalToBinary(dec_val)
'''
#another possible method 2 work better

class User:
    def __init__(self, name):
        self.name = name

    #function 2 convert any base num to decimal
    def any_base_to_decimal(number, base):
        #calling built-in function? int(num, base)
        temp = int(number, base)

        #printing corresponding decimal num
        print(temp)

    #Driver's code? -- rsrch
    if __name__ == '__main__' :
        hexadecimal_number = input("{user}, Enter your hexadecimal number:")
        base = 16
        any_base_to_decimal(hexadecimal_number, base)

    if  __name__ == '__main__' :
        binary_number = input("{user}, Enter your binary number:")
        base = 2
        any_base_to_decimal(binary_number, base)
        #add/make an input for the base?

user_name = input("Enter your name:")
user = User(user_name)
